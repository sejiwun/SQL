--Customers who are not in the US. 
SELECT Firstname, Lastname, Customerid, Country
FROM chinook.customers
WHERE Country <> 'USA';

--Customers in brazil
SELECT Firstname, Lastname, Customerid
FROM chinook.customers
WHERE Country = 'Brazil';

--Invoices of customers from Barzil.
SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.InvoiceDate, inv.BillingCountry
FROM customers cust
INNER JOIN invoices inv
ON cust.CustomerId = inv.CustomerId
WHERE cust.Country = 'Brazil';

-- Employees who are Sales Agents.
SELECT LastName, FirstName, Title
FROM chinook.employees
WHERE Title LIKE '%Agent%';

--list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry FROM chinook.Invoices ;

--invoices associated with each sales agent
SELECT 
    cust.FirstName, 
    cust.LastName, 
    emp.FirstName AS 'Sales Agent First name',
    emp.LastName AS 'Sales Agent Last name',
    inv.InvoiceId,
    inv.InvoiceDate,
    inv.BillingCountry
FROM employees AS emp
JOIN customers AS cust
ON emp.EmployeeId = cust.SupportRepId
JOIN invoices AS inv
ON inv.CustomerId = cust.CustomerId;

--Total invoice in 2009
SELECT COUNT(InvoiceId)
FROM chinook.invoices
WHERE InvoiceDate LIKE '%2009%';

--Total Sales in 2009
SELECT SUM(Total)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

--purchased track name AND artist name with each invoice line ID.
SELECT ar.name as Artist, t.Name as Track, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;

--Tracks including the Album name, Media type, and Genre.
SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
on a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m
on m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
on g.GenreId = t.GenreId;

--Total Sales made by each Agent
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp

JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId

JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId

WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.FirstName;

--Agent who made the most sales in 2009
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp

JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId

JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId

WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;
